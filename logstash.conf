input {
  file {
    type => "products"
    path => "C:/Users/Vaidee/products-log.log"
    codec => multiline {
      pattern => "^%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}.*"
      negate => "true"
      what => "previous"
    }
   }

  file {
    type => "orders"
    path => "C:/Users/Vaidee/orders-log.log"
    codec => multiline {
      pattern => "^%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}.*"
      negate => "true"
      what => "previous"
    }
   }

 file {
    type => "shipping"
    path => "C:/Users/Vaidee/shipping-log.log"
    codec => multiline {
      pattern => "^%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}.*"
      negate => "true"
      what => "previous"
    }
   }

 file {
    type => "shippingconsumer"
    path => "C:/Users/Vaidee/shippingconsumer-log.log"
    codec => multiline {
      pattern => "^%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}.*"
      negate => "true"
      what => "previous"
    }
   }

 file {
    type => "productsrecommendations"
    path => "C:/Users/Vaidees/Documents/Microservice_Bootcamp/Capstone/productsrecommendation/productsrecommendation-log.log"
    codec => multiline {
      pattern => "^%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}.*"
      negate => "true"
      what => "previous"
    }
   }


}

 
filter {
  #If log line contains tab character followed by 'at' then we will tag that entry as stacktrace
  if [message] =~ "\tat" {
    grok {
      match => ["message", "^(\tat)"]
      add_tag => ["stacktrace"]
    }
  }
 
 grok {
    match => [ "message", 
               "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:level} %{NUMBER:pid} --- \[(?<thread>[A-Za-z0-9-]+)\] [A-Za-z0-9.]*\.(?<class>[A-Za-z0-9#_]+)\s*:\s+(?<logmessage>.*)",
               "message",
               "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:level} %{NUMBER:pid} --- .+? :\s+(?<logmessage>.*)"
             ]
  }
 
  
  date {
    match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
  }
}
 
output {
    stdout {
        codec => rubydebug
    }
     if [type] == "products" {
        elasticsearch {
            hosts => ["localhost:9200"]
            index => "edureka-capstone-products"
            document_type => "edureka-capstone-products-%{+YYYY.MM.dd}"
        }
    }

     if [type] == "orders" {
        elasticsearch {
            hosts => ["localhost:9200"]
            index => "edureka-capstone-orders"
            document_type => "Edureka-capstone-orders-%{+YYYY.MM.dd}"
        }
    }

     if [type] == "shipping" {
        elasticsearch {
            hosts => ["localhost:9200"]
            index => "edureka-capstone-shipping"
            document_type => "edureka-capstone-shipping-%{+YYYY.MM.dd}"
        }
    }

     if [type] == "shippingconsumer" {
        elasticsearch {
            hosts => ["localhost:9200"]
            index => "edureka-capstone-shippingconsumer"
            document_type => "edureka-capstone-shippingconsumer-%{+YYYY.MM.dd}"
        }
    }

     if [type] == "productsrecommendations" {
        elasticsearch {
            hosts => ["localhost:9200"]
            index => "edureka-capstone-productsrecommendations"
            document_type => "edureka-capstone-productsrecommendations-%{+YYYY.MM.dd}"
        }
    }
}